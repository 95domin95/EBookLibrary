@using EBookLibraryData.Models

@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> SignInManager
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
        <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@UserManager.GetUserName(User) <span class="caret"></span></a>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" asp-controller="AccountManage" asp-action="LoanHistory"><i class="fa fa-history"></i> Historia wyporzyczeń</a></li>
            <li><a class="dropdown-item" asp-controller="AccountManage" asp-action="InQueue"><i class="fa fa-spinner"></i> Oczekujące</a></li>
            <li><a class="dropdown-item" asp-controller="AccountManage" asp-action="Loaned"><i class="fa fa-book-open"></i> Wyporzyczone</a></li>
            <li><a class="dropdown-item" asp-controller="AccountManage" asp-action="AccountManage"><i class="fa fa-cog"></i> Ustawienia</a></li>
            @if (User.IsInRole("Admin"))
            {
                <li class="dropdown-divider"></li>
                <li><a class="dropdown-item" asp-controller="LibraryManage" asp-action="Books"><i class="fa fa-cog"></i> Zarzadzaj biblioteką</a></li>
            }
            <li class="dropdown-divider"></li>
            <li><a class="dropdown-item" asp-controller="Account" asp-action="Logout"><i class="fa fa-power-off"></i> Wyloguj</a></li>
        </ul>
    </li>
}
else
{
    <li class="nav-item"><a class="nav-link" asp-controller="Account" asp-action="Login"><i class="fa fa-sign-in-alt"></i> Zaloguj</a></li>
    <li class="nav-item"><a class="nav-link" asp-controller="Account" asp-action="Register"><i class="fa fa-user-plus"></i> Rejestracja</a></li>
}